[{"/Users/owner/Desktop/project/react/ec-app/src/index.js":"1","/Users/owner/Desktop/project/react/ec-app/src/reportWebVitals.js":"2","/Users/owner/Desktop/project/react/ec-app/src/assets/theme.js":"3","/Users/owner/Desktop/project/react/ec-app/src/reducks/store/store.js":"4","/Users/owner/Desktop/project/react/ec-app/src/App.jsx":"5","/Users/owner/Desktop/project/react/ec-app/src/reducks/users/reducers.js":"6","/Users/owner/Desktop/project/react/ec-app/src/reducks/products/reducers.js":"7","/Users/owner/Desktop/project/react/ec-app/src/components/Header/index.js":"8","/Users/owner/Desktop/project/react/ec-app/src/Router.jsx":"9","/Users/owner/Desktop/project/react/ec-app/src/reducks/store/initialState.js":"10","/Users/owner/Desktop/project/react/ec-app/src/reducks/products/actions.js":"11","/Users/owner/Desktop/project/react/ec-app/src/components/Header/HeaderMenus.jsx":"12","/Users/owner/Desktop/project/react/ec-app/src/components/Header/ClosableDrawer.jsx":"13","/Users/owner/Desktop/project/react/ec-app/src/Auth.jsx":"14","/Users/owner/Desktop/project/react/ec-app/src/reducks/users/operations.js":"15","/Users/owner/Desktop/project/react/ec-app/src/reducks/users/selectors.js":"16","/Users/owner/Desktop/project/react/ec-app/src/firebase/index.js":"17","/Users/owner/Desktop/project/react/ec-app/src/firebase/config.js":"18","/Users/owner/Desktop/project/react/ec-app/src/reducks/users/actions.js":"19","/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/index.js":"20","/Users/owner/Desktop/project/react/ec-app/src/components/Header/Header.jsx":"21","/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/TextDetail.jsx":"22","/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/SelectBox.jsx":"23","/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/TextInput.jsx":"24","/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/PrimaryButton.jsx":"25","/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/GreyButton.jsx":"26","/Users/owner/Desktop/project/react/ec-app/src/templates/index.js":"27","/Users/owner/Desktop/project/react/ec-app/src/templates/ProductEdit.jsx":"28","/Users/owner/Desktop/project/react/ec-app/src/templates/ProductList.jsx":"29","/Users/owner/Desktop/project/react/ec-app/src/templates/ProductDetail.jsx":"30","/Users/owner/Desktop/project/react/ec-app/src/templates/LikesList.jsx":"31","/Users/owner/Desktop/project/react/ec-app/src/templates/CartList.jsx":"32","/Users/owner/Desktop/project/react/ec-app/src/templates/Reset.jsx":"33","/Users/owner/Desktop/project/react/ec-app/src/templates/SignUp.jsx":"34","/Users/owner/Desktop/project/react/ec-app/src/templates/SignIn.jsx":"35","/Users/owner/Desktop/project/react/ec-app/src/templates/OrderHistory.jsx":"36","/Users/owner/Desktop/project/react/ec-app/src/templates/OrderConfirm.jsx":"37","/Users/owner/Desktop/project/react/ec-app/src/templates/OrderComplete.jsx":"38","/Users/owner/Desktop/project/react/ec-app/src/reducks/products/operations.js":"39","/Users/owner/Desktop/project/react/ec-app/src/reducks/products/selectors.js":"40","/Users/owner/Desktop/project/react/ec-app/src/components/Products/index.js":"41","/Users/owner/Desktop/project/react/ec-app/src/components/Products/ImageArea.jsx":"42","/Users/owner/Desktop/project/react/ec-app/src/components/Products/ImagePrevew.jsx":"43","/Users/owner/Desktop/project/react/ec-app/src/components/Products/SetSizeArea.jsx":"44","/Users/owner/Desktop/project/react/ec-app/src/components/Products/SizeTable.jsx":"45","/Users/owner/Desktop/project/react/ec-app/src/components/Products/ProductCard.jsx":"46","/Users/owner/Desktop/project/react/ec-app/src/components/Products/ImageSwiper.jsx":"47","/Users/owner/Desktop/project/react/ec-app/src/components/Products/CartListItem.jsx":"48","/Users/owner/Desktop/project/react/ec-app/src/components/Products/OrderCompleteItem.jsx":"49","/Users/owner/Desktop/project/react/ec-app/src/components/Products/OrderHistoryItem.jsx":"50","/Users/owner/Desktop/project/react/ec-app/src/components/Products/OrderProduct.jsx":"51","/Users/owner/Desktop/project/react/ec-app/src/templates/UserMyPage.jsx":"52","/Users/owner/Desktop/project/react/ec-app/src/templates/CheckoutWrapper.jsx":"53","/Users/owner/Desktop/project/react/ec-app/src/components/Payment/index.js":"54","/Users/owner/Desktop/project/react/ec-app/src/components/Payment/PaymentEdit.jsx":"55","/Users/owner/Desktop/project/react/ec-app/src/reducks/payment/operations.js":"56"},{"size":1025,"mtime":1609207225024,"results":"57","hashOfConfig":"58"},{"size":362,"mtime":1609207225336,"results":"59","hashOfConfig":"58"},{"size":783,"mtime":1609207224644,"results":"60","hashOfConfig":"58"},{"size":1039,"mtime":1613355172658,"results":"61","hashOfConfig":"58"},{"size":306,"mtime":1609218698812,"results":"62","hashOfConfig":"58"},{"size":909,"mtime":1613295512641,"results":"63","hashOfConfig":"58"},{"size":469,"mtime":1609207225125,"results":"64","hashOfConfig":"58"},{"size":156,"mtime":1609207224739,"results":"65","hashOfConfig":"58"},{"size":1299,"mtime":1613262530075,"results":"66","hashOfConfig":"58"},{"size":364,"mtime":1613364981762,"results":"67","hashOfConfig":"58"},{"size":346,"mtime":1609207225052,"results":"68","hashOfConfig":"58"},{"size":3688,"mtime":1610967987028,"results":"69","hashOfConfig":"58"},{"size":4880,"mtime":1611821860516,"results":"70","hashOfConfig":"58"},{"size":613,"mtime":1609207224657,"results":"71","hashOfConfig":"58"},{"size":5635,"mtime":1613365005194,"results":"72","hashOfConfig":"58"},{"size":966,"mtime":1613365087619,"results":"73","hashOfConfig":"58"},{"size":471,"mtime":1609207224992,"results":"74","hashOfConfig":"58"},{"size":342,"mtime":1609207224971,"results":"75","hashOfConfig":"58"},{"size":1451,"mtime":1613365636727,"results":"76","hashOfConfig":"58"},{"size":264,"mtime":1610087299878,"results":"77","hashOfConfig":"58"},{"size":1773,"mtime":1611715127308,"results":"78","hashOfConfig":"58"},{"size":616,"mtime":1610087948743,"results":"79","hashOfConfig":"58"},{"size":806,"mtime":1609207224930,"results":"80","hashOfConfig":"58"},{"size":835,"mtime":1609207224949,"results":"81","hashOfConfig":"58"},{"size":602,"mtime":1609207224916,"results":"82","hashOfConfig":"58"},{"size":580,"mtime":1610021140392,"results":"83","hashOfConfig":"58"},{"size":676,"mtime":1613190155610,"results":"84","hashOfConfig":"58"},{"size":3840,"mtime":1610623295284,"results":"85","hashOfConfig":"58"},{"size":1779,"mtime":1611821413135,"results":"86","hashOfConfig":"58"},{"size":3243,"mtime":1610699418853,"results":"87","hashOfConfig":"58"},{"size":1358,"mtime":1610870400082,"results":"88","hashOfConfig":"58"},{"size":1608,"mtime":1610082514459,"results":"89","hashOfConfig":"58"},{"size":1273,"mtime":1609207225450,"results":"90","hashOfConfig":"58"},{"size":2503,"mtime":1609207225487,"results":"91","hashOfConfig":"58"},{"size":1807,"mtime":1609207225462,"results":"92","hashOfConfig":"58"},{"size":1327,"mtime":1610869502547,"results":"93","hashOfConfig":"58"},{"size":2514,"mtime":1610624156677,"results":"94","hashOfConfig":"58"},{"size":1615,"mtime":1610967466507,"results":"95","hashOfConfig":"58"},{"size":4752,"mtime":1611821199222,"results":"96","hashOfConfig":"58"},{"size":189,"mtime":1609207225157,"results":"97","hashOfConfig":"58"},{"size":556,"mtime":1610870053076,"results":"98","hashOfConfig":"58"},{"size":2253,"mtime":1609207224907,"results":"99","hashOfConfig":"58"},{"size":260,"mtime":1609207224909,"results":"100","hashOfConfig":"58"},{"size":4389,"mtime":1609207224913,"results":"101","hashOfConfig":"58"},{"size":1985,"mtime":1610699448884,"results":"102","hashOfConfig":"58"},{"size":3084,"mtime":1609207224913,"results":"103","hashOfConfig":"58"},{"size":957,"mtime":1609914234542,"results":"104","hashOfConfig":"58"},{"size":2306,"mtime":1611717594310,"results":"105","hashOfConfig":"58"},{"size":1386,"mtime":1610870086438,"results":"106","hashOfConfig":"58"},{"size":1401,"mtime":1610537227160,"results":"107","hashOfConfig":"58"},{"size":1792,"mtime":1611717881790,"results":"108","hashOfConfig":"58"},{"size":1141,"mtime":1613189077001,"results":"109","hashOfConfig":"58"},{"size":610,"mtime":1613352819215,"results":"110","hashOfConfig":"58"},{"size":52,"mtime":1613262677423,"results":"111","hashOfConfig":"58"},{"size":2460,"mtime":1613386621035,"results":"112","hashOfConfig":"58"},{"size":4471,"mtime":1613389094294,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"u04t78",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"116"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"116"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"116"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"116"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"116"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/owner/Desktop/project/react/ec-app/src/index.js",[],["248","249"],"/Users/owner/Desktop/project/react/ec-app/src/reportWebVitals.js",[],"/Users/owner/Desktop/project/react/ec-app/src/assets/theme.js",[],"/Users/owner/Desktop/project/react/ec-app/src/reducks/store/store.js",[],"/Users/owner/Desktop/project/react/ec-app/src/App.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/reducks/users/reducers.js",[],"/Users/owner/Desktop/project/react/ec-app/src/reducks/products/reducers.js",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Header/index.js",[],"/Users/owner/Desktop/project/react/ec-app/src/Router.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/reducks/store/initialState.js",[],"/Users/owner/Desktop/project/react/ec-app/src/reducks/products/actions.js",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Header/HeaderMenus.jsx",["250","251","252","253"],"import React, { useEffect } from \"react\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport Badge from \"@material-ui/core/Badge\"\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\"\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport {getProductsInLikes, getProductsInCart, getUserId} from \"../../reducks/users/selectors\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport {db} from \"../../firebase/index\"\r\nimport { fetchProductsInCart, fetchProductsInLikes } from \"../../reducks/users/operations\"\r\nimport { push } from 'connected-react-router'\r\n\r\nconst HeaderMenus = (props) => {\r\n\r\n  const selector = useSelector((state)=> state)\r\n  const uid = getUserId(selector)\r\n  let productsInCart = getProductsInCart(selector)\r\n  let productsInLikes = getProductsInLikes(selector)\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"users\").doc(uid).collection(\"cart\")\r\n      .onSnapshot(snapshots => {\r\n        snapshots.docChanges().forEach(change => {\r\n          // changeにはカートに入れた商品の情報が入っている\r\n          const product = change.doc.data();\r\n          const changeType = change.type;\r\n\r\n          // productsInCartの中身を変更する処理\r\n          switch (changeType) {\r\n            case 'added':\r\n              productsInCart.push(product);\r\n              break;\r\n            case 'modified':\r\n              // 変更された配列の番号を取得\r\n              const index =   productsInCart.findIndex(product => product.cartId === change.doc.id)\r\n              productsInCart[index] = product\r\n              break;\r\n            case 'removed':\r\n            productsInCart = productsInCart.filter(product => product.cartId !== change.doc.id)\r\n            break;\r\n          }\r\n        })\r\n\r\n        dispatch(fetchProductsInCart(productsInCart))\r\n      })\r\n      return () => unsubscribe()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"users\").doc(uid).collection(\"likes\")\r\n      .onSnapshot(snapshots => {\r\n        snapshots.docChanges().forEach(change => {\r\n          // changeにはカートに入れた商品の情報が入っている\r\n          const product = change.doc.data();\r\n          const changeType = change.type;\r\n\r\n          // productsInCartの中身を変更する処理\r\n          switch (changeType) {\r\n            case 'added':\r\n              productsInLikes.push(product);\r\n              break;\r\n            case 'modified':\r\n              // 変更された配列の番号を取得\r\n              const index =   productsInLikes.findIndex(product => product.likeId === change.doc.id)\r\n              productsInLikes[index] = product\r\n              break;\r\n            case 'removed':\r\n            productsInLikes = productsInLikes.filter(product => product.likeId !== change.doc.id)\r\n            break;\r\n          }\r\n        })\r\n\r\n        dispatch(fetchProductsInLikes(productsInLikes))\r\n      })\r\n      return () => unsubscribe()\r\n  }, [])\r\n\r\n  return(\r\n    <>\r\n      <IconButton onClick={()=>dispatch(push('/cart/?cart'))}>\r\n        <Badge badgeContent={productsInCart.length} color=\"secondary\">\r\n          <ShoppingCartIcon/>\r\n        </Badge>\r\n      </IconButton>\r\n      <IconButton onClick={()=>dispatch(push('/likes/?likes'))}>\r\n        <Badge badgeContent={productsInLikes.length} color=\"secondary\">\r\n          <FavoriteBorderIcon/>\r\n        </Badge>\r\n      </IconButton>\r\n      <IconButton onClick={(event)=>props.handleDrawerToggle(event)}>\r\n        <MenuIcon/>\r\n      </IconButton>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HeaderMenus","/Users/owner/Desktop/project/react/ec-app/src/components/Header/ClosableDrawer.jsx",["254"],"import React, { useCallback, useEffect,useState } from 'react'\r\nimport Divider from \"@material-ui/core/Divider\"\r\nimport Drawer from \"@material-ui/core/Drawer\"\r\nimport List from \"@material-ui/core/List\"\r\nimport ListItem from \"@material-ui/core/ListItem\"\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\r\nimport ListItemText from \"@material-ui/core/ListItemText\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport SearchIcon from \"@material-ui/icons/Search\"\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\"\r\nimport HistoryIcon from \"@material-ui/icons/History\"\r\nimport PersonIcon from \"@material-ui/icons/Person\"\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\"\r\nimport {makeStyles} from \"@material-ui/styles\"\r\nimport {TextInput} from \"../UIkit/index\"\r\nimport { push } from 'connected-react-router'\r\nimport { useDispatch } from 'react-redux'\r\nimport {signOut} from '../../reducks/users/operations'\r\nimport { db } from '../../firebase'\r\n\r\nconst useStyles = makeStyles((theme)=>({\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      flexShrink:0,\r\n      width: 256\r\n    }\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: 256\r\n  },\r\n  searchField: {\r\n    alignItems: \"center\",\r\n    display:'flex',\r\n    marginLeft:32\r\n  }\r\n}))\r\n\r\nconst ClosableDrawer = (props) => {\r\n  const classes = useStyles()\r\n  const {container} = props\r\n  const dispatch = useDispatch()\r\n  \r\n  const selectMenu = (event, path) => {\r\n    dispatch(push(path))\r\n    props.onClose(event)\r\n  }\r\n\r\n  const [keyword, setKeyword] = useState(\"\")\r\n  const [filters, setFilters] = useState([\r\n    {func: selectMenu, label: \"すべて\", id:\"all\", value:\"/\"},\r\n    {func: selectMenu, label: \"メンズ\", id:\"male\", value:\"/?gender=male\"},\r\n    {func: selectMenu, label: \"レディース\", id:\"female\", value:\"/?gender=female\"},\r\n  ])\r\n\r\n  const inputKeyword = useCallback((event)=> {\r\n    setKeyword(event.target.value)\r\n  }, [setKeyword])\r\n\r\n  const searchKeyword = (e) => {\r\n\r\n  //  const filter = filters.filter(item => item.label === keyword)\r\n  \r\n  //   if(filter[0] === undefined) {\r\n  //     alert(\"条件が一致しません。\\nもう一度検索してください。\")\r\n  //   } else {\r\n  //     filter[0].func(e, filter[0].value) \r\n  //   }\r\n  dispatch(push(`?search=${keyword}`))\r\n}\r\n\r\n\r\n\r\n  \r\n\r\n  const menus = [\r\n    {func: selectMenu, label: \"商品登録\", icon: <AddCircleIcon/>, id:\"register\", value:\"/product/edit\"},\r\n    {func: selectMenu, label: \"注文履歴\", icon: <HistoryIcon/>, id:\"history\", value:\"/order/history\"},\r\n    {func: selectMenu, label: \"プロフィール\", icon: <PersonIcon/>, id:\"profile\", value:\"/user/mypage\"},\r\n    \r\n  ]\r\n\r\n  useEffect(() => {\r\n    db.collection('categories').orderBy('order', 'asc').get()\r\n      .then(snapshots => {\r\n        const list = []\r\n        snapshots.forEach(snapshot => {\r\n          const category = snapshot.data()\r\n          list.push({func: selectMenu, label: category.name, id: category.id, value: `/?category=${category.id}`})\r\n        })\r\n        // stateの初期値＋listの中身を展開\r\n        setFilters(prevState => [...prevState, ...list])\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <nav>\r\n      <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor=\"right\"\r\n        open={props.open}\r\n        onClose={(event) => props.onClose(event)}\r\n        clases={{paper:classes.drawerPaper}}\r\n        ModalProps={{keepMounted:true}}\r\n      >\r\n      <div\r\n      onClose={(event) => props.onClose(event)}\r\n      >\r\n        <div className={classes.searchField}>\r\n          <TextInput \r\n            fullWidth={false} label={\"商品名を入力\"}  multiline={false} onChange={(event)=>inputKeyword(event)} rows={1} value={keyword} type={\"text\"}\r\n          />\r\n          <IconButton onClick={(e) => searchKeyword(e)}>\r\n            <SearchIcon/>\r\n          </IconButton>\r\n        </div>\r\n        <Divider/>\r\n        <List>\r\n          {menus.map( menu => (\r\n            <ListItem key={menu.id} onClick={(e) => menu.func(e, menu.value)}>\r\n              <ListItemIcon>\r\n                {menu.icon}\r\n              </ListItemIcon>\r\n              <ListItemText primary={menu.label}/>              \r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n          <ListItem button key=\"logout\" onClick={()=> dispatch(signOut())}>\r\n            <ListItemIcon>\r\n               <ExitToAppIcon/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={\"Logout\"}/>\r\n          </ListItem>\r\n          <Divider />\r\n          <List>\r\n            {filters.map(filter => (\r\n              <ListItem key={filter.id} onClick={(e) => filter.func(e, filter.value) }>\r\n                <ListItemText primary={filter.label} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n      </div>\r\n      </Drawer>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default ClosableDrawer","/Users/owner/Desktop/project/react/ec-app/src/Auth.jsx",["255"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listenAuthState } from './reducks/users/operations';\r\nimport { getIsSignedIn } from './reducks/users/selectors';\r\n\r\n// chirdrenは'/'の画面のこと\r\nconst Auth = ({children}) => {\r\n const dispatch = useDispatch();\r\n const selector = useSelector(state => state);\r\n const isSignedIn = getIsSignedIn(selector)\r\n\r\n useEffect(() => {\r\n   if (!isSignedIn) {\r\n     dispatch(listenAuthState())\r\n   }\r\n }, []);\r\n\r\n if (!isSignedIn) {\r\n   return <></>\r\n } else {\r\n   return children\r\n }\r\n}\r\nexport default Auth","/Users/owner/Desktop/project/react/ec-app/src/reducks/users/operations.js",[],"/Users/owner/Desktop/project/react/ec-app/src/reducks/users/selectors.js",[],"/Users/owner/Desktop/project/react/ec-app/src/firebase/index.js",[],"/Users/owner/Desktop/project/react/ec-app/src/firebase/config.js",[],"/Users/owner/Desktop/project/react/ec-app/src/reducks/users/actions.js",[],"/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/index.js",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Header/Header.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/TextDetail.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/SelectBox.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/TextInput.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/PrimaryButton.jsx",["256"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {makeStyles} from '@material-ui/styles'\r\nimport { colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  \"button\": {\r\n    backgroundColor:\"#4dd0e1\",\r\n    color: \"000\",\r\n    fontSize: 16,\r\n    height: 48,\r\n    marginBottom: 16,\r\n    width: 256\r\n  }\r\n})\r\n\r\nconst PrimaryButton = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return(\r\n    <Button className={classes.button} variant=\"contained\" onClick={()=> props.onClick()}>\r\n      {props.label}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default PrimaryButton","/Users/owner/Desktop/project/react/ec-app/src/components/UIkit/GreyButton.jsx",["257"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles} from '@material-ui/styles'\nimport { colors } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme)=>({\n  \"button\": {\n    backgroundColor: theme.palette.grey[\"300\"],\n    fontSize: 16,\n    height: 48,\n    marginBottom: 16,\n    width: 256\n  }\n}))\n\nconst GreyButton = (props) => {\n  const classes = useStyles();\n\n  return(\n    <Button className={classes.button} variant=\"contained\" onClick={()=> props.onClick()}>\n      {props.label}\n    </Button>\n  )\n}\n\nexport default GreyButton","/Users/owner/Desktop/project/react/ec-app/src/templates/index.js",[],"/Users/owner/Desktop/project/react/ec-app/src/templates/ProductEdit.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/templates/ProductList.jsx",["258","259"],"import React, { useEffect } from 'react'\r\nimport {ProductCard} from '../components/Products/index'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {fetchProducts} from '../reducks/products/operations'\r\nimport {getProducts} from \"../reducks/products/selectors\"\r\nimport {signOut} from \"../reducks/users/operations\"\r\n\r\nconst ProductList = () => {\r\n  const dispatch = useDispatch()\r\n  // 商品情報を取得\r\n  const selector = useSelector((state) => state)\r\n  const products = getProducts(selector)\r\n  const query = selector.router.location.search;\r\n\r\n  // queryの最初の文字が?genderだったらその後ろのidをgenderに入れる\r\n  const gender = /^\\?gender=/.test(query) ? query.split('?gender=')[1] : \"\"\r\n  const category = /^\\?category=/.test(query) ? query.split('?category=')[1] : \"\"\r\n  const search = /^\\?search=/.test(query) ? query.split('?search=')[1] : \"\"\r\n\r\n  console.log(search)\r\n\r\n  // マウント時にクラウドから商品情報を取得してくるoperationの関数をdispatch\r\n  useEffect(() => {\r\n    dispatch(fetchProducts(gender, category, search))\r\n  }, [query])\r\n\r\n return (\r\n   <section className=\"c-section-wrapin\">\r\n     <div className=\"p-grid__row\">\r\n      {products.length > 0 && (\r\n        products.map(product => (\r\n          <ProductCard \r\n            key={product.id} \r\n            id={product.id}\r\n            images={product.images}\r\n            category={product.category}\r\n            description={product.description}\r\n            gender={product.gender}\r\n            name={product.name}\r\n            price={product.price}\r\n            sizes={product.sizes}\r\n            updated_at={product.updated_at}\r\n            />\r\n        ))\r\n      )}\r\n      \r\n     </div>\r\n   </section>\r\n )\r\n}\r\n\r\nexport default ProductList","/Users/owner/Desktop/project/react/ec-app/src/templates/ProductDetail.jsx",["260","261","262"],"import { makeStyles } from '@material-ui/styles';\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { db, FirebaseTimestamp } from '../firebase';\r\nimport HTMLReactParser from \"html-react-parser\"\r\nimport {ImageSwiper, SizeTable} from \"../components/Products\"\r\nimport {addProductToCart, addProductToLikes} from \"../reducks/users/operations\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sliderBox: {\r\n    [theme.breakpoints.down('sm')]:{\r\n      margin:0,\r\n      heiht:320,\r\n      width:320\r\n    },\r\n    [theme.breakpoints.up('sm')]:{\r\n      margin:'0 auto',\r\n      heiht:400,\r\n      width:400\r\n    }\r\n  },\r\n  detail: {\r\n    textAlign: 'left',\r\n    [theme.breakpoints.down('sm')]:{\r\n      margin:'0 auto 16px auto',\r\n      heiht:\"auto\",\r\n      width:320\r\n    },\r\n    [theme.breakpoints.up('sm')]:{\r\n      margin:'0 auto',\r\n      heiht:\"auto\",\r\n      width:400\r\n    }\r\n  },\r\n  price: {\r\n    fontSize: 32\r\n  }\r\n}))\r\n\r\nconst ReturnCodeToBr = (text) => {\r\n  if(text === \"\") {\r\n    return text\r\n  } else {\r\n    return HTMLReactParser(text.replace(/\\r?\\n/g, '<br/>'))\r\n  }\r\n}\r\n\r\nconst ProductDetail = () => {\r\n\r\n  const classes = useStyles()\r\n\r\n  const selector = useSelector((state=> state))\r\n  const path = selector.router.location.pathname\r\n  const id = path.split('/product/')[1]\r\n  const dispatch = useDispatch()\r\n\r\n  const [product, setProduct] = useState(null)\r\n\r\n  useEffect(() => {\r\n    db.collection('products').doc(id).get()\r\n    .then(doc=> {\r\n      const data = doc.data()\r\n      setProduct(data)\r\n    })\r\n  }, [])\r\n\r\n  const addLikes = useCallback((selectedSize) => {\r\n    const timestamp = FirebaseTimestamp.now()\r\n    dispatch(addProductToLikes({\r\n      added_at: timestamp,\r\n      description: product.description,\r\n      gender: product.gender,\r\n      images: product.images,\r\n      name: product.name,\r\n      productId: product.id,\r\n      quantity: 1,\r\n      price:product.price,\r\n      size: selectedSize\r\n    }))\r\n  }, [product])\r\n\r\n  const addProduct = useCallback((selectedSize) => {\r\n    const timestamp = FirebaseTimestamp.now()\r\n    dispatch(addProductToCart({\r\n      added_at: timestamp,\r\n      description: product.description,\r\n      gender: product.gender,\r\n      images: product.images,\r\n      name: product.name,\r\n      productId: product.id,\r\n      quantity: 1,\r\n      price:product.price,\r\n      size: selectedSize\r\n    }))\r\n  }, [product])\r\n\r\n  return (\r\n   <section className=\"c-section-wrapin\">\r\n    {product && (\r\n      <div className=\"p-grid__row\">\r\n      <div className={classes.sliderBox}>\r\n        <ImageSwiper images={product.images}/>\r\n      </div>\r\n      <div className={classes.detail}>\r\n        <h2 className=\"u-text__headline\">{product.name}</h2>\r\n        <p className={classes.price}>{\"¥\" + product.price.toLocaleString()}</p>\r\n        <div className=\"module-spacer--small\" />\r\n\r\n        <p>{ReturnCodeToBr(product.description)}</p>\r\n\r\n        <div className=\"module-spacer--small\" />\r\n        <SizeTable \r\n          sizes={product.sizes}   \r\n          addProduct={addProduct}\r\n          addLikes={addLikes}\r\n          />\r\n\r\n      </div>\r\n      </div>\r\n    )}\r\n\r\n    \r\n   </section>\r\n )\r\n}\r\n\r\nexport default ProductDetail","/Users/owner/Desktop/project/react/ec-app/src/templates/LikesList.jsx",["263","264"],"import React, { useCallback } from 'react'\nimport List from '@material-ui/core/List'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductsInLikes } from '../reducks/users/selectors'\nimport { CartListItem } from '../components/Products/index'\nimport { PrimaryButton, GreyButton } from '../components/UIkit'\nimport { push } from 'connected-react-router'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n  root:{\n    margin: \"0 auto\",\n    maxWidth: 512,\n    width:\"100%\"\n  }\n})\n\nconst LikesList = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state)=>state);\n  const productsInLikes = getProductsInLikes(selector);\n  const classes = useStyles();\n\n  const backToHome　= useCallback(() => {\n    dispatch(push('/'))\n  },[])\n\n  return (\n    <section className=\"c-section-wrapin\">\n    <h2 className=\"u-text__headline\">お気に入り</h2>\n    <List className={classes.root}>\n      {productsInLikes.length > 0 && (\n        productsInLikes.map(product => (\n          <CartListItem key={product.cartId} product={product}/>\n        ))\n      )}\n    </List >\n    <div className=\"module-spacer--medium\" />\n    <div className=\"p-grid__column\">\n    <PrimaryButton label={\"ショッピングを続ける\"} onClick={backToHome}/>\n   \n    \n    </div>\n  </section>\n  )\n}\n\nexport default LikesList","/Users/owner/Desktop/project/react/ec-app/src/templates/CartList.jsx",["265","266"],"import React, { useCallback } from 'react'\nimport List from '@material-ui/core/List'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductsInCart } from '../reducks/users/selectors'\nimport { CartListItem } from '../components/Products/index'\nimport { PrimaryButton, GreyButton } from '../components/UIkit'\nimport { push } from 'connected-react-router'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles = makeStyles({\n  root:{\n    margin: \"0 auto\",\n    maxWidth: 512,\n    width:\"100%\"\n  }\n})\n\nconst CartList = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state)=>state);\n  const productsInCart = getProductsInCart(selector);\n  \n  const classes = useStyles();\n\n  const goToOrder = useCallback(() => {\n    dispatch(push('/order/confirm'))\n  },[])\n\n  const backToHome= useCallback(() => {\n    dispatch(push('/'))\n  },[])\n\n  return (\n    <section className=\"c-section-wrapin\">\n      <h2 className=\"u-text__headline\">ショッピングカート</h2>\n      <List className={classes.root}>\n        {productsInCart.length > 0 && (\n          productsInCart.map(product => (\n            <CartListItem key={product.cartId} product={product}/>\n          ))\n        )}\n      </List >\n      <div className=\"module-spacer--medium\" />\n      <div className=\"p-grid__column\">\n        <PrimaryButton label={\"レジへ進む\"} onClick={goToOrder}/>\n        <div className=\"module-spacer--extra-extra-small\" />\n        <GreyButton label={\"ショッピングを続ける\"} onClick={backToHome}/>    \n      \n      </div>\n    </section>\n  )\n}\n\nexport default CartList","/Users/owner/Desktop/project/react/ec-app/src/templates/Reset.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/templates/SignUp.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/templates/SignIn.jsx",["267"],"import { push } from 'connected-react-router';\r\nimport React,{useCallback,useState} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {TextInput, PrimaryButton} from \"../components/UIkit\";\r\nimport {signIn, signUp} from \"../reducks/users/operations\"\r\n\r\nconst SignIn = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const  [email, setEmail] = useState(\"\"),\r\n         [password, setPassword] = useState(\"\")\r\n\r\n  \r\n  const inputEmail = useCallback((event) => {\r\n    setEmail(event.target.value)\r\n  }, [setEmail])\r\n\r\n  const inputPassword = useCallback((event) => {\r\n    setPassword(event.target.value)\r\n  }, [setPassword])\r\n\r\n  return (\r\n    <div className=\"c-section-container\">\r\n      <h2 className=\"u-text__headline u-text-center\">サインイン</h2>\r\n      <div className=\"module-spacer--medium\" />\r\n      \r\n      <TextInput \r\n        fullWidth={true} label={\"メールアドレス\"} multiline={false} \r\n        required={true} rows={1} value={email} type={\"email\"}\r\n        onChange={inputEmail}\r\n      />\r\n      <TextInput \r\n        fullWidth={true} label={\"パスワード\"} multiline={false} \r\n        required={true} rows={1} value={password} type={\"password\"}\r\n        onChange={inputPassword}\r\n      />\r\n      \r\n      <div className=\"module-spacer--medium\" />\r\n      <div className=\"center\">\r\n      <PrimaryButton \r\n        label={'Sign In'} \r\n        onClick={() => dispatch(signIn(email, password))}  \r\n      />\r\n      </div>\r\n      <div className=\"module-spacer--medium\" />\r\n      <div className=\"center\">\r\n      <p onClick={()=>{dispatch(push('/signup'))}}>アカウントをお持ちでない方はこちら</p>\r\n      <p onClick={()=>{dispatch(push('/signin/reset'))}}>パスワードを忘れた方はこちら</p>\r\n      </div>\r\n    </div>\r\n  )\r\n} \r\n\r\nexport default SignIn\r\n","/Users/owner/Desktop/project/react/ec-app/src/templates/OrderHistory.jsx",["268","269"],"import React, { useEffect } from \"react\";\nimport List from \"@material-ui/core/List\"\nimport {makeStyles} from \"@material-ui/styles\"\nimport {getOrdersHistory, getUserId} from \"../reducks/users/selectors\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOrdersHistry } from \"../reducks/users/operations\";\nimport {OrderHistoryItem} from \"../components/Products\"\n\nconst useStyles = makeStyles((theme) => ({\n  orderList: {\n    background: theme.palette.grey[\"100\"],\n    margin: '0 auto',\n    padding: 32,\n    [theme.breakpoints.down('md')]: {\n      width: '100%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 768\n    }\n  }\n}))\n\nconst OrderHistory = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const orders = getOrdersHistory(selector);\n  // const id = getUserId(selector)\n  \n  const classes = useStyles();\n\n  // マウント時にordersに注文履歴のデータを入れる\n  useEffect(() => {\n    dispatch(fetchOrdersHistry()) \n  }, [])\n\n  console.log(orders)\n\n  return (\n    <section className=\"c-section-wrapin\">\n      <List className={classes.orderList}>\n        {orders.length > 0 && (\n          orders.map(order => <OrderHistoryItem key={order.id} order={order}/>)\n        )}\n      </List>\n    </section>\n  ) \n  \n\n}\n\nexport default OrderHistory","/Users/owner/Desktop/project/react/ec-app/src/templates/OrderConfirm.jsx",["270"],"import React, {useMemo, useCallback} from \"react\"\nimport {useDispatch ,useSelector} from \"react-redux\"\nimport {getProductsInCart} from \"../reducks/users/selectors\"\nimport {makeStyles} from \"@material-ui/styles\"\nimport {CartListItem} from \"../components/Products\"\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport {PrimaryButton,TextDetail} from \"../components/UIkit\"\nimport {orderProduct} from \"../reducks/products/operations\"\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  detaileBox: {\n    margin: \"0 auto\",\n    [theme.breakpoints.down('sm')]: {\n      width:320\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: 512\n    }\n  },\n  orderBox: {\n    border: '1px solid rgba(0,0,0,0.2)',\n    borderRadius: 4,\n    boxShadow: \"0 4px 2px 2px rgba(0,0,0,0.2)\",\n    height: 256,\n    margin: \"24px auto 16px auto\",\n    padding: 16,\n    width: 288\n  }\n}))\n\nconst OrderConfirm = () => {\n const classes = useStyles();\n const dispatch = useDispatch();\n const selector = useSelector((state) => state);\n const productsInCart = getProductsInCart(selector)\n\n const subtotal = useMemo(() => {\n  return productsInCart.reduce((sum, product) => sum += product.price, 0)\n  // sumに初期値０からpriceを足していった値を代入する\n }, [productsInCart])\n const shippingFee = (subtotal >= 10000) ? 0 : 300\n const tax = Math.round(subtotal * 0.1)\n const total = subtotal + shippingFee + tax\n\n const order = useCallback(() => {\n  dispatch(orderProduct(productsInCart, total))\n }, [productsInCart, total])\n\n return (\n   <section className=\"c-section-wrapin\">\n     <h2 className=\"u-text__headline\">注文の確認</h2>\n     <div className=\"p-grid__row\">\n       <div className={classes.detaileBox}>\n         <List>\n           {productsInCart.length > 0 && (\n             productsInCart.map(product => (\n               <CartListItem key={product.cartId} product={product} />\n             ))\n           )}\n         </List>\n       </div>\n       <div className={classes.orderBox}>\n         <TextDetail label={\"商品合計\"} value={\"¥\" + subtotal.toLocaleString()}/>\n         <TextDetail label={\"消費税\"} value={\"¥\" + tax.toLocaleString()}/>\n         <TextDetail label={\"送料\"} value={\"¥\" + shippingFee.toLocaleString()}/>\n         <Divider />\n         <TextDetail label={\"合計金額\"} value={\"¥\" + total.toLocaleString()}/>\n         <PrimaryButton label={\"注文する\"} onClick={order} />\n       </div>\n     </div>\n   </section>\n\n )\n\n\n}\n\nexport default OrderConfirm","/Users/owner/Desktop/project/react/ec-app/src/templates/OrderComplete.jsx",["271","272","273"],"import React, { useEffect, useCallback} from 'react'\nimport List from \"@material-ui/core/List\"\nimport {makeStyles} from \"@material-ui/styles\"\nimport {getOrdersHistory, getUserId} from \"../reducks/users/selectors\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchOrdersHistry } from \"../reducks/users/operations\";\nimport {OrderCompleteItem} from \"../components/Products\"\nimport { PrimaryButton } from '../components/UIkit';\nimport { push } from 'connected-react-router'\n\nconst useStyles = makeStyles((theme) => ({\n  orderList: {\n    background: theme.palette.grey[\"100\"],\n    margin: '0 auto',\n    padding: 32,\n    [theme.breakpoints.down('md')]: {\n      width: '100%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: 768\n    }\n  }\n}))\n\nconst OrderComplete = () => {\n  const dispatch = useDispatch();\n  const selector = useSelector((state) => state);\n  const orders = getOrdersHistory(selector);\n  const order = orders.map(order => order)[0]\n  const classes = useStyles();\n\n  const backToHome= useCallback(() => {\n    dispatch(push('/'))\n  },[])\n\n  console.log(order)\n\n  useEffect(() => {\n    dispatch(fetchOrdersHistry()) \n  }, [])\n\n  return (\n    <section className=\"c-section-wrapin\">\n      <h2 className=\"u-text__headline\">注文が完了しました。</h2>\n      <List className={classes.orderList}>\n        {orders.length > 0 && \n        <OrderCompleteItem order={order}/>\n        }\n      </List>\n      <div className=\"module-spacer--medium\" />\n\n      <PrimaryButton label={\"ショッピングを続ける\"} onClick={backToHome}/>\n    </section>\n  )\n}\n\nexport default OrderComplete","/Users/owner/Desktop/project/react/ec-app/src/reducks/products/operations.js",[],"/Users/owner/Desktop/project/react/ec-app/src/reducks/products/selectors.js",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Products/index.js",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Products/ImageArea.jsx",["274","275"],"import React, { useCallback } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { storage } from '../../firebase/index';\r\nimport ImagePrevew from './ImagePrevew';\r\n\r\nconst useStyles = makeStyles({\r\n  icon:{\r\n    height:48,\r\n    width:48\r\n  }\r\n})\r\n\r\nconst ImageArea = (props) => {\r\n  const classes = useStyles()\r\n\r\n  const uploadImage = useCallback((event) => {\r\n    const file = event.target.files;\r\n    let blob = new Blob(file, {type: \"image/jpeg\"})\r\n\r\n    // ランダムな文字列を生成して、それをfileNameにする\r\n    const S=\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\r\n    const N=16;\r\n    const fileName = Array.from(crypto.getRandomValues(new Uint32Array(N))).map((n) => S[n%S.length]).join('')\r\n\r\n    const uploadRef = storage.ref('images').child(fileName);\r\n    const uploadTask = uploadRef.put(blob);\r\n\r\n    uploadTask.then(() => {\r\n      uploadTask.snapshot.ref.getDownloadURL().then((downloadURL) => {\r\n        const newImage = {id:fileName, path:downloadURL};\r\n        props.setImages((prevState => [...prevState,newImage]))\r\n      })\r\n    })\r\n  }, [props.setImages])\r\n\r\n  const deleteImage = useCallback( async (id) => {\r\n    const ret = window.confirm(\"消去しますか？\")\r\n\r\n    if (!ret) {\r\n      return false\r\n    } else {\r\n      const newImage = props.images.filter(image => image.id !== id)\r\n      props.setImages(newImage)\r\n      return storage.ref('images').child(id).delete()\r\n    }\r\n  }, [props.images])\r\n\r\n return (\r\n  <div>\r\n    <div className=\"p-grid__list-images\">\r\n      {props.images.length > 0 && (\r\n        props.images.map(image => <ImagePrevew delete={deleteImage} id={image.id} path={image.path} key={image.id}/>)\r\n      )}\r\n    </div>\r\n    <div className=\"u-text-right\">\r\n      <span>商品画像を登録する</span>\r\n      <IconButton className={classes.icon}>\r\n        <label>\r\n          <AddPhotoAlternateIcon/>\r\n          <input className=\"u-display-none\" type=\"file\" id=\"image\" onChange={(event)=> uploadImage(event)}/>\r\n        </label>\r\n      </IconButton>\r\n    </div>\r\n  </div>\r\n )\r\n}\r\n\r\nexport default ImageArea ","/Users/owner/Desktop/project/react/ec-app/src/components/Products/ImagePrevew.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Products/SetSizeArea.jsx",["276"],"import { TableContainer } from '@material-ui/core'\r\nimport React, { useCallback, useState, useMemo} from 'react'\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableHead from \"@material-ui/core/TableHead\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\"\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport EditIcon from \"@material-ui/icons/Edit\"\r\nimport {makeStyles} from '@material-ui/core'\r\nimport { TextInput } from '../UIkit'\r\n\r\nconst useStyles = makeStyles({\r\n  checkIcon:{\r\n    float: \"right\"\r\n  },\r\n  \r\n  iconCell: {\r\n    height: 48,\r\n    width: 48\r\n  }\r\n})\r\n\r\n\r\nconst SetSizeArea = (props) => {\r\n  const classes = useStyles()\r\n\r\n  const [index, setIndex] = useState(0),\r\n        [size, setSize] = useState(\"\"),\r\n        [quantity, setQuantity] = useState(\"\")\r\n      \r\n  const inputSize = useCallback((event) => {\r\n    setSize(event.target.value)\r\n  }, [setSize]);\r\n      \r\n  const inputQuantity = useCallback((event) => {\r\n    setQuantity(event.target.value)\r\n  }, [setQuantity]);\r\n\r\n  const addSize = (index, size, quantity) => {\r\n    if (size === \"\" || quantity === \"\") {\r\n      // Required input is blank\r\n      return false\r\n    } else {\r\n      if(index === props.sizes.length){\r\n        // 新規作成の処理\r\n        props.setSizes(prevState => [...prevState, {size: size, quantity: quantity}])\r\n        setIndex(index + 1)\r\n        setSize(\"\")\r\n        setQuantity(0)\r\n      } else {\r\n        // 編集の処理\r\n        const newSizes = props.sizes\r\n        // 選択されてるindex番目のsizesに現在のsize, quantityの値を入れる\r\n        newSizes[index] = {size: size, quantity: quantity}\r\n        props.setSizes(newSizes)\r\n        setIndex(newSizes.length)\r\n        setSize(\"\")\r\n        setQuantity(0)\r\n      }\r\n    }\r\n  }\r\n\r\n  const editSize = (index, size, quantity) => {\r\n    setIndex(index)\r\n    setSize(size)\r\n    setQuantity(quantity)\r\n  }\r\n\r\n  const deleteSize = (deleteIndex) => {\r\n    const ret = window.confirm(\"消去しますか？\")\r\n    if(!ret) {\r\n      return false\r\n    } else {\r\n      const newSizes = props.sizes.filter((item,i) => i !== deleteIndex)\r\n      props.setSizes(newSizes)\r\n    }\r\n  }\r\n\r\n  const memoIndex = useMemo(()=>{\r\n    setIndex(props.sizes.length)\r\n  }, [props.sizes.length])\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>サイズ</TableCell>\r\n              <TableCell>数量</TableCell>\r\n              <TableCell className={classes.iconCell} />\r\n              <TableCell className={classes.iconCell} />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.sizes.length > 0 && (\r\n              props.sizes.map((item, i) => (\r\n                <TableRow key={item.size}>\r\n                  <TableCell>{item.size}</TableCell>\r\n                  <TableCell>{item.quantity}</TableCell>\r\n                  <TableCell>\r\n                    <IconButton className={classes.iconCell}onClick={()=>editSize(i, item.size, item.quantity)}>\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton className={classes.iconCell} onClick={()=>deleteSize(i)}>\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n        <div>\r\n          <TextInput \r\n            fullWidth={false} label={\"サイズ\"} multiline={false} required={true} onChange={inputSize} rows={1} value={size} type={\"text\"}\r\n          />\r\n          <TextInput \r\n            fullWidth={false} label={\"数量\"} multiline={false} required={true} onChange={inputQuantity} rows={1} value={quantity} type={\"number\"}\r\n          />\r\n        </div>\r\n        <IconButton className={classes.checkIcon} onClick={()=> addSize(index, size, quantity)}>\r\n          <CheckCircleIcon />\r\n        </IconButton>\r\n      </TableContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SetSizeArea","/Users/owner/Desktop/project/react/ec-app/src/components/Products/SizeTable.jsx",["277","278","279"],"import { TableContainer } from '@material-ui/core'\r\nimport React, { useCallback, useState, useMemo} from 'react'\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\"\r\nimport TableCell from \"@material-ui/core/TableCell\"\r\nimport TableRow from \"@material-ui/core/TableRow\"\r\nimport IconButton from \"@material-ui/core/IconButton\"\r\nimport {makeStyles} from '@material-ui/core'\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\"\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\"\r\n\r\nconst useStyles = makeStyles({\r\n  iconCell:{\r\n    padding:0,\r\n    width:48,\r\n    height:48\r\n  }\r\n})\r\n\r\nconst SizeTable = (props) => {\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const sizes = props.sizes\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table>\r\n        <TableBody>\r\n          {sizes.length > 0 && (\r\n            sizes.map(size => (\r\n              <TableRow key={size.size}>\r\n                <TableCell>\r\n                  {size.size}\r\n                </TableCell>\r\n                <TableCell>\r\n                 残り {size.quantity}点\r\n                </TableCell>\r\n                <TableCell className={classes.iconCell}>\r\n                  {size.quantity > 0 ? (\r\n                    <IconButton \r\n                    className={classes.iconCell}\r\n                    onClick={()=> props.addProduct(size.size)}\r\n                    >\r\n                      <ShoppingCartIcon />\r\n                    </IconButton>\r\n                  ) : (\r\n                    <div>売切</div>\r\n                  )}\r\n                </TableCell>\r\n                <TableCell className={classes.iconCell}>\r\n                  <IconButton onClick={()=> props.addLikes(size.size)}>\r\n                  <FavoriteBorderIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n\r\n}\r\n\r\nexport default SizeTable","/Users/owner/Desktop/project/react/ec-app/src/components/Products/ProductCard.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Products/ImageSwiper.jsx",["280"],"import React, { useState } from 'react';\r\nimport Swiper from \"react-id-swiper\"\r\nimport NoImage from \"../../assets/img/src/no_image.png\"\r\nimport 'swiper/css/swiper.css'\r\n\r\nconst ImageSwiper = (props) => {\r\n  const [params] = useState({\r\n    pagination: {\r\n      el: '.swiper-pagination',\r\n      type: 'bullets',\r\n      clickable: true,\r\n      dynamicBullets: true\r\n    },\r\n    navigation: {\r\n      nextEl: '.swiper-button-next',\r\n      prevEl: 'swiper-button-prev'\r\n    },\r\n    loop: true\r\n  })\r\n\r\n  const images = props.images\r\n\r\n  return (\r\n    <Swiper {...params}>\r\n      {images.length === 0 ? (\r\n        <div className=\"p-media__thumb\">\r\n          <img src={NoImage} alt=\"no image\" />\r\n        </div>\r\n      ) : (\r\n        images.map(image => (\r\n          <div className=\"p-media__thumb\" key={image.id}>\r\n            <img src={image.path} alt=\"商品画像\" />\r\n          </div>\r\n        ))\r\n      )}\r\n    </Swiper>\r\n  )\r\n}\r\n\r\nexport default ImageSwiper","/Users/owner/Desktop/project/react/ec-app/src/components/Products/CartListItem.jsx",["281","282"],"import React from 'react'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport {makeStyles} from '@material-ui/styles'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport IconButton from '@material-ui/core/IconButton'\nimport { List } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport { getUserId } from '../../reducks/users/selectors'\nimport { db } from '../../firebase'\nimport {getProductsInCart} from \"../../reducks/users/selectors\"\n\n\n\n\nconst useStyles = makeStyles({\n  list: {\n    height:128\n  },\n  image: {\n    objectFit: 'cover',\n    margin: 16,\n    height: 96,\n    width: 96\n  },\n  text: {\n    width: '100%'\n  }\n})\n\nconst CartListItem = (props) => {\n  const classes = useStyles()\n  const selector = useSelector((state)=>state)\n  const uid = getUserId(selector)\n\n  const product = props.product\n  const image = props.product.images[0].path;\n  const name = props.product.name;\n  const size = props.product.size;\n  const price = props.product.price.toLocaleString();\n  const query = selector.router.location.search\n\n  console.log(query)\n\n  const removeProductFromCart = (id) => {\n    console.log(id)\n    \n      if(/^\\?likes/.test(query)){\n        return db.collection('users').doc(uid).collection('likes').doc(id).delete()\n      } else if(/cart/.test(query)) {\n        return db.collection('users').doc(uid).collection('cart').doc(id).delete()\n      }\n  }\n\n  return (\n    <>\n      <ListItem className={classes.list}>\n        <ListItemAvatar>\n          <img className={classes.image} src={image} alt=\"商品画像\"/>\n        </ListItemAvatar>\n        <div className={classes.text}>\n        <ListItemText \n          primary={name}\n          secondary={\"サイズ：\" + size}\n          />\n        <ListItemText\n          primary={\"¥ \" + price}\n          />  \n        </div>\n        <IconButton \n          onClick={()=> {\n            /^\\?likes/.test(query) ? \n            removeProductFromCart(product.likeId) :\n            removeProductFromCart(product.cartId) \n            }}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItem>\n      <Divider />\n    </>\n  )\n}\n\nexport default CartListItem","/Users/owner/Desktop/project/react/ec-app/src/components/Products/OrderCompleteItem.jsx",["283"],"import React from \"react\"\nimport Divider from \"@material-ui/core/Divider\"\nimport {TextDetail} from \"../UIkit\"\nimport {OrderProduct} from \"./index\"\n\n\nconst datetimeToString = (date) => {\n return date.getFullYear() + \"-\" \n        + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\"\n        + (\"00\" + date.getDate()).slice(-2) + \"\"\n        + (\"00\" + date.getHours()).slice(-2) + \":\"\n        + (\"00\" + date.getMinutes()).slice(-2) + \":\"\n        + (\"00\" + date.getSeconds()).slice(-2)\n}\n\nconst dateToString = (date) => {\n  return date.getFullYear() + \"-\" \n        + (\"00\" + (date.getMonth() + 1)).slice(-2) + \"-\"\n        + (\"00\" + date.getDate()).slice(-2) \n\n}\n\nconst OrderCompleteItem = (props) => {\n  const order = props.order\n  const price = \"¥\" + order.amount.toLocaleString();\n  const orderedDatetime = datetimeToString(order.update_at.toDate())\n  const shippingDate = dateToString(order.shippingDate.toDate())\n\n\n return (\n   <div>\n   {order.products.length > 0 && (\n     <>\n     <div className=\"module-spacer--small\"/>\n     <TextDetail label={\"注文ID\"} value={order.id}/>\n     <TextDetail label={\"注文日時\"} value={orderedDatetime}/>\n     <TextDetail label={\"発送予定日\"} value={shippingDate}/>\n     <TextDetail label={\"注文金額\"} value={price}/>\n    \n         <OrderProduct products={order.products} /> \n \n     </>\n     )}\n   </div>\n )\n}\n\nexport default OrderCompleteItem","/Users/owner/Desktop/project/react/ec-app/src/components/Products/OrderHistoryItem.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Products/OrderProduct.jsx",["284","285"],"import React, {useCallback} from \"react\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Divider from \"@material-ui/core/ListItemText\"\nimport {PrimaryButton} from \"../UIkit\"\nimport {useDispatch} from \"react-redux\"\nimport {push} from \"connected-react-router\"\nimport { makeStyles } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    height: 'auto',\n    background: '#fff'\n  },\n  image: {\n    objectFit: 'cover',\n    margin: '8px 16px 8px 0',\n    height: 96,\n    width: 96,\n    width: 96\n  },\n  text: {\n    width: \"100%\"\n  }\n}))\n\nconst OrderProduct = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const products = props.products\n  \n  const goToProductDetail = useCallback((id) => {\n    dispatch(push('/product/' + id))\n  }, [])\n\n return (\n   <List>\n     {products.length > 0 && (\n       products.map(product => (\n        <>\n         <ListItem className={classes.list}>\n           <ListItemAvatar>\n             <img \n              className={classes.image}\n              src={product.images[0].path}\n              alt=\"商品画像\"\n             />\n           </ListItemAvatar>\n           <div className={classes.text}>\n          <ListItemText\n            primary={product.name}\n            secondary={\"サイズ: \" + product.size}\n            />\n           <ListItemText\n             primary={\"¥\" + product.price.toLocaleString()}\n           />\n           </div>\n        <PrimaryButton label={\"詳細\"} onClick={() => goToProductDetail(product.id)}/>\n     </ListItem>\n     <Divider />\n     </>\n       ))\n     )}\n\n   </List>\n )\n}\n\nexport default OrderProduct","/Users/owner/Desktop/project/react/ec-app/src/templates/UserMyPage.jsx",["286"],"import React, {useCallback} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {PrimaryButton, GreyButton, TextDetail} from \"../components/UIkit\"\nimport {push} from \"connected-react-router\"\nimport {getUserName} from \"../reducks/users/selectors\"\n\nconst UserMyPage = () => {\n  const dispatch = useDispatch()\n  const selector = useSelector(state => state)\n  const username = getUserName(selector)\n\n  const transition = useCallback((path) => {\n    dispatch(push(path))\n  })\n\n  return (\n    <section className=\"c-section-container\">\n      <h2 className=\"u-text__headline u-text-center\">マイページ</h2>\n      <div className=\"module-spacer--medium\"/>\n      <TextDetail label={\"ユーザー名\"} value={username} />\n      <div className=\"module-spacer--medium\"/>\n      <div className=\"center\">\n        <PrimaryButton \n          label={\"カード情報の編集\"}\n          onClick={() => transition('/user/payment/edit')}\n        />\n        <GreyButton \n          label={\"注文履歴の確認\"}\n          onClick={() => transition('order/history')}\n        />\n      </div>\n    </section>\n  )\n}\n\nexport default UserMyPage\n","/Users/owner/Desktop/project/react/ec-app/src/templates/CheckoutWrapper.jsx",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Payment/index.js",[],"/Users/owner/Desktop/project/react/ec-app/src/components/Payment/PaymentEdit.jsx",["287"],"/Users/owner/Desktop/project/react/ec-app/src/reducks/payment/operations.js",[],{"ruleId":"288","replacedBy":"289"},{"ruleId":"290","replacedBy":"291"},{"ruleId":"292","severity":1,"message":"293","line":31,"column":11,"nodeType":"294","messageId":"295","endLine":43,"endColumn":12},{"ruleId":"296","severity":1,"message":"297","line":41,"column":30,"nodeType":"298","endLine":41,"endColumn":96},{"ruleId":"292","severity":1,"message":"293","line":60,"column":11,"nodeType":"294","messageId":"295","endLine":72,"endColumn":12},{"ruleId":"296","severity":1,"message":"299","line":70,"column":31,"nodeType":"298","endLine":70,"endColumn":98},{"ruleId":"296","severity":1,"message":"300","line":94,"column":6,"nodeType":"301","endLine":94,"endColumn":8,"suggestions":"302"},{"ruleId":"296","severity":1,"message":"303","line":16,"column":5,"nodeType":"301","endLine":16,"endColumn":7,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":16},{"ruleId":"305","severity":1,"message":"306","line":4,"column":10,"nodeType":"307","messageId":"308","endLine":4,"endColumn":16},{"ruleId":"305","severity":1,"message":"309","line":6,"column":9,"nodeType":"307","messageId":"308","endLine":6,"endColumn":16},{"ruleId":"296","severity":1,"message":"310","line":25,"column":6,"nodeType":"301","endLine":25,"endColumn":13,"suggestions":"311"},{"ruleId":"296","severity":1,"message":"312","line":65,"column":6,"nodeType":"301","endLine":65,"endColumn":8,"suggestions":"313"},{"ruleId":"296","severity":1,"message":"314","line":80,"column":6,"nodeType":"301","endLine":80,"endColumn":15,"suggestions":"315"},{"ruleId":"296","severity":1,"message":"314","line":95,"column":6,"nodeType":"301","endLine":95,"endColumn":15,"suggestions":"316"},{"ruleId":"305","severity":1,"message":"317","line":6,"column":25,"nodeType":"307","messageId":"308","endLine":6,"endColumn":35},{"ruleId":"296","severity":1,"message":"314","line":26,"column":5,"nodeType":"301","endLine":26,"endColumn":7,"suggestions":"318"},{"ruleId":"296","severity":1,"message":"314","line":27,"column":5,"nodeType":"301","endLine":27,"endColumn":7,"suggestions":"319"},{"ruleId":"296","severity":1,"message":"314","line":31,"column":5,"nodeType":"301","endLine":31,"endColumn":7,"suggestions":"320"},{"ruleId":"305","severity":1,"message":"321","line":5,"column":17,"nodeType":"307","messageId":"308","endLine":5,"endColumn":23},{"ruleId":"305","severity":1,"message":"322","line":4,"column":27,"nodeType":"307","messageId":"308","endLine":4,"endColumn":36},{"ruleId":"296","severity":1,"message":"323","line":34,"column":6,"nodeType":"301","endLine":34,"endColumn":8,"suggestions":"324"},{"ruleId":"296","severity":1,"message":"314","line":50,"column":5,"nodeType":"301","endLine":50,"endColumn":28,"suggestions":"325"},{"ruleId":"305","severity":1,"message":"322","line":4,"column":27,"nodeType":"307","messageId":"308","endLine":4,"endColumn":36},{"ruleId":"296","severity":1,"message":"314","line":34,"column":5,"nodeType":"301","endLine":34,"endColumn":7,"suggestions":"326"},{"ruleId":"296","severity":1,"message":"323","line":40,"column":6,"nodeType":"301","endLine":40,"endColumn":8,"suggestions":"327"},{"ruleId":"296","severity":1,"message":"328","line":36,"column":6,"nodeType":"301","endLine":36,"endColumn":23,"suggestions":"329"},{"ruleId":"296","severity":1,"message":"328","line":48,"column":6,"nodeType":"301","endLine":48,"endColumn":20,"suggestions":"330"},{"ruleId":"305","severity":1,"message":"331","line":83,"column":9,"nodeType":"307","messageId":"308","endLine":83,"endColumn":18},{"ruleId":"305","severity":1,"message":"332","line":2,"column":17,"nodeType":"307","messageId":"308","endLine":2,"endColumn":28},{"ruleId":"305","severity":1,"message":"333","line":2,"column":30,"nodeType":"307","messageId":"308","endLine":2,"endColumn":38},{"ruleId":"305","severity":1,"message":"334","line":2,"column":40,"nodeType":"307","messageId":"308","endLine":2,"endColumn":47},{"ruleId":"335","severity":1,"message":"336","line":27,"column":11,"nodeType":"337","endLine":27,"endColumn":47},{"ruleId":"305","severity":1,"message":"338","line":9,"column":10,"nodeType":"307","messageId":"308","endLine":9,"endColumn":14},{"ruleId":"305","severity":1,"message":"339","line":13,"column":9,"nodeType":"307","messageId":"308","endLine":13,"endColumn":26},{"ruleId":"305","severity":1,"message":"340","line":2,"column":8,"nodeType":"307","messageId":"308","endLine":2,"endColumn":15},{"ruleId":"341","severity":1,"message":"342","line":22,"column":5,"nodeType":"343","messageId":"344","endLine":22,"endColumn":10},{"ruleId":"296","severity":1,"message":"314","line":36,"column":6,"nodeType":"301","endLine":36,"endColumn":8,"suggestions":"345"},{"ruleId":"296","severity":1,"message":"346","line":12,"column":22,"nodeType":"307","endLine":12,"endColumn":33},{"ruleId":"296","severity":1,"message":"314","line":24,"column":6,"nodeType":"301","endLine":24,"endColumn":36,"suggestions":"347"},"no-native-reassign",["348"],"no-negated-in-lhs",["349"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","Assignments to the 'productsInCart' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'productsInLikes' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'selectMenu'. Either include it or remove the dependency array.","ArrayExpression",["350"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isSignedIn'. Either include them or remove the dependency array.",["351"],"no-unused-vars","'colors' is defined but never used.","Identifier","unusedVar","'signOut' is defined but never used.","React Hook useEffect has missing dependencies: 'category', 'dispatch', 'gender', and 'search'. Either include them or remove the dependency array.",["352"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["353"],"React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["354"],["355"],"'GreyButton' is defined but never used.",["356"],["357"],["358"],"'signUp' is defined but never used.","'getUserId' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["359"],["360"],["361"],["362"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["363"],["364"],"'memoIndex' is assigned a value but never used.","'useCallback' is defined but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'List' is defined but never used.","'getProductsInCart' is defined but never used.","'Divider' is defined but never used.","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected",["365"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["366"],"no-global-assign","no-unsafe-negation",{"desc":"367","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"375","fix":"376"},{"desc":"375","fix":"377"},{"desc":"378","fix":"379"},{"desc":"378","fix":"380"},{"desc":"378","fix":"381"},{"desc":"378","fix":"382"},{"desc":"383","fix":"384"},{"desc":"378","fix":"385"},{"desc":"378","fix":"386"},{"desc":"387","fix":"388"},{"desc":"387","fix":"389"},{"desc":"378","fix":"390"},{"desc":"391","fix":"392"},"Update the dependencies array to be: [selectMenu]",{"range":"393","text":"394"},"Update the dependencies array to be: [dispatch, isSignedIn]",{"range":"395","text":"396"},"Update the dependencies array to be: [category, dispatch, gender, query, search]",{"range":"397","text":"398"},"Update the dependencies array to be: [id]",{"range":"399","text":"400"},"Update the dependencies array to be: [dispatch, product.description, product.gender, product.id, product.images, product.name, product.price]",{"range":"401","text":"402"},{"range":"403","text":"402"},"Update the dependencies array to be: [dispatch]",{"range":"404","text":"405"},{"range":"406","text":"405"},{"range":"407","text":"405"},{"range":"408","text":"405"},"Update the dependencies array to be: [dispatch, productsInCart, total]",{"range":"409","text":"410"},{"range":"411","text":"405"},{"range":"412","text":"405"},"Update the dependencies array to be: [props]",{"range":"413","text":"414"},{"range":"415","text":"414"},{"range":"416","text":"405"},"Update the dependencies array to be: [dispatch, stripe, elements, customerId]",{"range":"417","text":"418"},[3051,3053],"[selectMenu]",[496,498],"[dispatch, isSignedIn]",[995,1002],"[category, dispatch, gender, query, search]",[1596,1598],"[id]",[2012,2021],"[dispatch, product.description, product.gender, product.id, product.images, product.name, product.price]",[2436,2445],[795,797],"[dispatch]",[806,808],[879,881],[973,975],[1483,1506],"[dispatch, productsInCart, total]",[1069,1071],[1156,1158],[1212,1229],"[props]",[1552,1566],[958,960],[898,928],"[dispatch, stripe, elements, customerId]"]